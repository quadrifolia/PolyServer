name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly security scan
    - cron: '0 2 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    runs-on: ubuntu-latest
    name: Security Analysis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Run CodeQL Analysis
      uses: github/codeql-action/init@v3
      with:
        languages: javascript
        config-file: ./.github/codeql/codeql-config.yml
      continue-on-error: true
      
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      continue-on-error: true
      
    - name: Security audit of shell scripts
      run: |
        echo "üîí Running security audit..."
        
        # Check for dangerous patterns
        echo "Checking for dangerous shell patterns..."
        find . -name "*.sh" -o -name "*.template" | xargs grep -l "eval\|exec\|\$(.*)" | while read -r file; do
          echo "‚ö†Ô∏è File with potentially dangerous patterns: $file"
          grep -n "eval\|exec\|\$(.*)" "$file" | head -5
        done
        
        # Check for hardcoded credentials
        echo "Checking for potential hardcoded credentials..."
        find . -name "*.sh" -o -name "*.template" -o -name "*.env" | xargs grep -i "password\|secret\|key.*=" | grep -v "template\|{{" | head -10 || true
        
        # Check file permissions
        echo "Checking file permissions..."
        find . -name "*.sh" -not -perm -u+x | while read -r file; do
          echo "‚ö†Ô∏è Script without execute permission: $file"
        done
        
        echo "‚úÖ Security audit completed"
        
    - name: Dependency security check
      run: |
        echo "üì¶ Checking for vulnerable dependencies..."
        
        # Check if any package.json or requirements.txt exist
        if find . -name "package.json" -o -name "requirements.txt" -o -name "Gemfile" | grep -q .; then
          echo "Found dependency files - would run security audit"
          # In a real scenario, you'd run npm audit, safety, bundler audit, etc.
        else
          echo "No dependency files found - script-only project"
        fi
        
        echo "‚úÖ Dependency check completed"